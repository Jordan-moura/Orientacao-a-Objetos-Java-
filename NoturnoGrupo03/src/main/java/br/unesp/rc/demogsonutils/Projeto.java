package br.unesp.rc.demogsonutils;

import br.unesp.rc.arquivoutils.ArquivoUtils;
import br.unesp.rc.gsonutils.utils.GsonUtils;
import br.unesp.rc.modelo.Arquivo;
import br.unesp.rc.modelo.Atributos;
import br.unesp.rc.modelo.Classe;
import br.unesp.rc.modelo.Relacionamentos;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import javax.swing.ButtonGroup;
import javax.swing.JRadioButton;

/**
 * @author JRM
 * @author BdOC
 */
public final class Projeto extends javax.swing.JFrame {

    private String json;
    private String projectName;
    private String diretorio;
    private String diretorioCompleto;
    private String arquivoUml;
    private Arquivo arquivo = new Arquivo();

    /**
     * Creates new form Projeto
     *
     * @param projectName
     * @param diretorio
     */
    public String getProjectName() {
        return projectName;
    }

    public void setProjectName(String projectName) {
        this.projectName = projectName;
    }

/// Ao clicar no "Criar Projeto" ------------------------------------------------------
    public Projeto(String projectName, String diretorio) {
        this.projectName = projectName;
        this.diretorio = diretorio;
        this.diretorioCompleto = this.diretorio + this.projectName;

        initComponents();
    }

/// Ao clicar no "Buscar Projeto"  ------------------------------------------------
    public Projeto(String diretorioCompleto) {
        this.diretorioCompleto = diretorioCompleto;
        this.json = ArquivoUtils.leitura(this.diretorioCompleto);
        this.arquivo = (Arquivo) GsonUtils.xmlToObjeto(this.json, Arquivo.class);

        initComponents();

        DefaultListModel listModel = new DefaultListModel();
        for (int i = 0; i < this.arquivo.getArquivo().size(); i++) {
            listModel.add(i, this.arquivo.getArquivo().get(i).getNomeClasse());
        }

        ListClasses = new JList(listModel);
        spListaClasses.setViewportView(ListClasses);
    }

    private Projeto() {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        buttonGroup1 = new javax.swing.ButtonGroup();
        PanelClasses = new javax.swing.JPanel();
        spListaClasses = new javax.swing.JScrollPane();
        ListClasses = new javax.swing.JList<>();
        btnAddClasse = new javax.swing.JButton();
        btnRemoveClasse = new javax.swing.JButton();
        JScrollPaneClasses = new javax.swing.JScrollPane();
        txtClassesName = new javax.swing.JTextPane();
        btnListarAtributos = new javax.swing.JButton();
        Relacionar = new javax.swing.JButton();
        PanelAtributos = new javax.swing.JPanel();
        spListaAtributos = new javax.swing.JScrollPane();
        ListAtributo = new javax.swing.JList<>();
        btnAddAtributo = new javax.swing.JButton();
        btnRemoveAtributo = new javax.swing.JButton();
        jScrollPaneAtributos = new javax.swing.JScrollPane();
        txtAtributosName = new javax.swing.JTextPane();
        btnSalvar = new javax.swing.JButton();
        btnGerarUML = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextUML = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        CodigoUML = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ListClasses.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        spListaClasses.setViewportView(ListClasses);

        btnAddClasse.setText("+");
        btnAddClasse.setToolTipText("");
        btnAddClasse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddClasseActionPerformed(evt);
            }
        });

        btnRemoveClasse.setText("-");
        btnRemoveClasse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveClasseActionPerformed(evt);
            }
        });

        txtClassesName.setEditable(false);
        txtClassesName.setText("Classes");
        JScrollPaneClasses.setViewportView(txtClassesName);

        btnListarAtributos.setText("Listar");
        btnListarAtributos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarAtributosActionPerformed(evt);
            }
        });

        Relacionar.setText("Relacionar");
        Relacionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RelacionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelClassesLayout = new javax.swing.GroupLayout(PanelClasses);
        PanelClasses.setLayout(PanelClassesLayout);
        PanelClassesLayout.setHorizontalGroup(
            PanelClassesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelClassesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelClassesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spListaClasses, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                    .addGroup(PanelClassesLayout.createSequentialGroup()
                        .addComponent(JScrollPaneClasses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(PanelClassesLayout.createSequentialGroup()
                        .addComponent(btnAddClasse, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemoveClasse, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Relacionar)
                        .addGap(18, 18, 18)
                        .addComponent(btnListarAtributos)))
                .addContainerGap())
        );
        PanelClassesLayout.setVerticalGroup(
            PanelClassesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelClassesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JScrollPaneClasses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(spListaClasses, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelClassesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelClassesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnListarAtributos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Relacionar))
                    .addGroup(PanelClassesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnRemoveClasse)
                        .addComponent(btnAddClasse)))
                .addContainerGap())
        );

        ListAtributo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        spListaAtributos.setViewportView(ListAtributo);

        btnAddAtributo.setText("+");
        btnAddAtributo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAtributoActionPerformed(evt);
            }
        });

        btnRemoveAtributo.setText("-");
        btnRemoveAtributo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveAtributoActionPerformed(evt);
            }
        });

        txtAtributosName.setEditable(false);
        txtAtributosName.setText("Atributos");
        jScrollPaneAtributos.setViewportView(txtAtributosName);

        javax.swing.GroupLayout PanelAtributosLayout = new javax.swing.GroupLayout(PanelAtributos);
        PanelAtributos.setLayout(PanelAtributosLayout);
        PanelAtributosLayout.setHorizontalGroup(
            PanelAtributosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAtributosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelAtributosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spListaAtributos, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAtributosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemoveAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelAtributosLayout.createSequentialGroup()
                        .addComponent(jScrollPaneAtributos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PanelAtributosLayout.setVerticalGroup(
            PanelAtributosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAtributosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneAtributos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(spListaAtributos, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelAtributosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddAtributo)
                    .addComponent(btnRemoveAtributo))
                .addContainerGap())
        );

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnGerarUML.setLabel("UML");
        btnGerarUML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarUMLActionPerformed(evt);
            }
        });

        jTextUML.setColumns(20);
        jTextUML.setRows(5);
        jScrollPane1.setViewportView(jTextUML);

        CodigoUML.setEditable(false);
        CodigoUML.setText("Código UML");
        CodigoUML.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(CodigoUML);

        jButton1.setText("Salvar Código UML");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSalvar)
                                .addGap(18, 18, 18)
                                .addComponent(btnGerarUML))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PanelClasses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(PanelAtributos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGerarUML, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PanelClasses, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelAtributos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoveClasseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveClasseActionPerformed
        DefaultListModel listModel = (DefaultListModel) ListClasses.getModel();

        int selectedIndex = ListClasses.getSelectedIndex();

        if (selectedIndex != -1) {
            listModel.remove(selectedIndex);
            this.arquivo.getArquivo().remove(selectedIndex);
        }
        System.out.println(this.arquivo);
    }//GEN-LAST:event_btnRemoveClasseActionPerformed

    private void btnAddAtributoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAtributoActionPerformed
        int selectedIndex = ListClasses.getSelectedIndex();

        if (selectedIndex != -1) {

            Atributos atributo = new Atributos();

            String modificadorName = JOptionPane.showInputDialog(this,
                    "Digite o modificador:",
                    "Entrada de Dados",
                    JOptionPane.QUESTION_MESSAGE);

            String tipoName = JOptionPane.showInputDialog(this,
                    "Digite o tipo:",
                    "Entrada de Dados",
                    JOptionPane.QUESTION_MESSAGE);

            String nomeName = JOptionPane.showInputDialog(this,
                    "Digite o nome:",
                    "Entrada de Dados",
                    JOptionPane.QUESTION_MESSAGE);

            atributo.setModificador(modificadorName.toLowerCase());
            atributo.setTipo(tipoName);
            atributo.setNome(nomeName);

            this.arquivo.getArquivo().get(selectedIndex).getAtributos().add(atributo);

            System.out.println(this.arquivo);

            DefaultListModel listModelAtributo = new DefaultListModel();

            for (int i = 0; i < this.arquivo.getArquivo().get(selectedIndex).getAtributos().size(); i++) {
                listModelAtributo.add(i, this.arquivo.getArquivo().get(selectedIndex).getAtributos().get(i));
            }
            ListAtributo = new JList(listModelAtributo);
            spListaAtributos.setViewportView(ListAtributo);
        }
    }//GEN-LAST:event_btnAddAtributoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed

        this.json = GsonUtils.objetoToXML(this.arquivo);

        boolean b = ArquivoUtils.salvar(this.diretorioCompleto, this.json);
        if (b) {
            System.out.println("Arquivo criado com sucesso!");
        } else {
            System.out.println("Problemas ao criar o arquivo!");
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnRemoveAtributoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAtributoActionPerformed

        int selectedIndexAtributo = ListAtributo.getSelectedIndex();
        int selectedIndexClasse = ListClasses.getSelectedIndex();

        // Mexe com o arquivo
        if (selectedIndexAtributo != -1 && selectedIndexClasse != -1) {
            this.arquivo.getArquivo().get(selectedIndexClasse).getAtributos().remove(selectedIndexAtributo);
            System.out.println(this.arquivo);
        }

        DefaultListModel listModelAtributo = new DefaultListModel();

        for (int i = 0; i < this.arquivo.getArquivo().get(selectedIndexClasse).getAtributos().size(); i++) {
            listModelAtributo.add(i, this.arquivo.getArquivo().get(selectedIndexClasse).getAtributos().get(i));
        }
        ListAtributo = new JList(listModelAtributo);
        spListaAtributos.setViewportView(ListAtributo);
        System.out.println(this.arquivo);
    }//GEN-LAST:event_btnRemoveAtributoActionPerformed

    private void btnAddClasseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddClasseActionPerformed

        Classe classe = new Classe();

        String classeName = JOptionPane.showInputDialog(this,
                "Digite o nome da Classe:",
                "Entrada de Dados",
                JOptionPane.QUESTION_MESSAGE);

        String pacoteName = JOptionPane.showInputDialog(this,
                "Digite o nome do pacote:",
                "Entrada de Dados",
                JOptionPane.QUESTION_MESSAGE);

        DefaultListModel listModel = new DefaultListModel();

        if (!this.arquivo.getArquivo().isEmpty()) {
            for (int i = 0; i < this.arquivo.getArquivo().size(); i++) {
                listModel.add(i, this.arquivo.getArquivo().get(i).getNomeClasse());
            }
            listModel.add(this.arquivo.getArquivo().size(), classeName);
        } else {
            listModel.add(0, classeName);
        }
        ListClasses = new JList(listModel);
        spListaClasses.setViewportView(ListClasses);

        classe.setNomeClasse(classeName);
        classe.setNomePacote(pacoteName);
        this.arquivo.getArquivo().add(classe);

        System.out.println(this.arquivo);
    }//GEN-LAST:event_btnAddClasseActionPerformed

    private void btnListarAtributosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarAtributosActionPerformed

        int selectedIndex = ListClasses.getSelectedIndex();

        if (selectedIndex != -1) {
            DefaultListModel listModelAtributo = new DefaultListModel();

            for (int i = 0; i < this.arquivo.getArquivo().get(selectedIndex).getAtributos().size(); i++) {
                listModelAtributo.add(i, this.arquivo.getArquivo().get(selectedIndex).getAtributos().get(i));
            }

            ListAtributo = new JList(listModelAtributo);
            spListaAtributos.setViewportView(ListAtributo);
    }//GEN-LAST:event_btnListarAtributosActionPerformed
    }

    private void btnGerarUMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarUMLActionPerformed

        String uml = "@startuml\ntitle " + getProjectName() + "\n";
        String umlRelacionamento = new String();

        for (int i = 0; i < this.arquivo.getArquivo().size(); i++) {
            uml += "Class " + this.arquivo.getArquivo().get(i).getNomeClasse() + " {\n";
            for (int j = 0; j < this.arquivo.getArquivo().get(i).getAtributos().size(); j++) {

                if (this.arquivo.getArquivo().get(i).getAtributos().get(j).getModificador().equals("private")) {
                    uml += "    - ";
                } else if (this.arquivo.getArquivo().get(i).getAtributos().get(j).getModificador().equals("public")) {
                    uml += "    + ";
                } else if (this.arquivo.getArquivo().get(i).getAtributos().get(j).getModificador().equals("protected")) {
                    uml += "    # ";
                }
                uml += this.arquivo.getArquivo().get(i).getAtributos().get(j).getTipo() + " ";
                uml += this.arquivo.getArquivo().get(i).getAtributos().get(j).getNome() + "\n";

            }
            uml += "    + " + this.arquivo.getArquivo().get(i).getNomeClasse() + " ()";
            uml += "\n}\n";

            for (int j = 0; j < this.arquivo.getArquivo().get(i).getRelacionamentos().size(); j++) {

                if (this.arquivo.getArquivo().get(i).getRelacionamentos().get(j).getTipo().equals("herança")) {
                    umlRelacionamento += this.arquivo.getArquivo().get(i).getNomeClasse() + " <|-- " + this.arquivo.getArquivo().get(i).getRelacionamentos().get(j).getClasse();
                } else if (this.arquivo.getArquivo().get(i).getRelacionamentos().get(j).getTipo().equals("agregação")) {
                    umlRelacionamento += this.arquivo.getArquivo().get(i).getNomeClasse() + " *-- " + this.arquivo.getArquivo().get(i).getRelacionamentos().get(j).getClasse();
                } else if (this.arquivo.getArquivo().get(i).getRelacionamentos().get(j).getTipo().equals("composição")) {
                    umlRelacionamento += this.arquivo.getArquivo().get(i).getNomeClasse() + " o-- " + this.arquivo.getArquivo().get(i).getRelacionamentos().get(j).getClasse();
                }
                umlRelacionamento += "\n";
            }
        }
        uml = uml + umlRelacionamento + "@enduml";
        jTextUML.setText(uml);
        this.arquivoUml = uml;
    }//GEN-LAST:event_btnGerarUMLActionPerformed

    private void RelacionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RelacionarActionPerformed

        int selectedIndex = ListClasses.getSelectedIndex();
        
        if (selectedIndex != -1) {
            Relacionamentos relacionamento = new Relacionamentos();

            String tipoRelacionamento = JOptionPane.showInputDialog(this,
                    "Digite tipo de relacionamento:",
                    "Entrada de Dados",
                    JOptionPane.QUESTION_MESSAGE);

            String nomeClasse = JOptionPane.showInputDialog(this,
                    "Digite o nome da Classe relacionada:",
                    "Entrada de Dados",
                    JOptionPane.QUESTION_MESSAGE);            
            
            relacionamento.setTipo(tipoRelacionamento.toLowerCase());
            relacionamento.setClasse(nomeClasse);
            
            this.arquivo.getArquivo().get(selectedIndex).getRelacionamentos().add(relacionamento);

            System.out.println(this.arquivo);
        }
    }//GEN-LAST:event_RelacionarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        boolean b = false;
        String conteudo = this.arquivoUml;
        String nomeArquivo = JOptionPane.showInputDialog(this,
                "Digite o nome do arquivo:");
        String arquivo = this.diretorio + "\\" + nomeArquivo + ".puml";
        File file = new File(arquivo);
        if (file.exists()) {
            file.delete();
        }

        try {
            FileWriter writer = new FileWriter(arquivo, true);
            BufferedWriter bufferedWriter = new BufferedWriter(writer);
            bufferedWriter.write(conteudo);
            bufferedWriter.close();
            b = true;
        } catch (IOException ex) {
            System.out.println("Mensagem: " + ex.getMessage());
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Projeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Projeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Projeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Projeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Projeto().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane CodigoUML;
    private javax.swing.JScrollPane JScrollPaneClasses;
    private javax.swing.JList<String> ListAtributo;
    private javax.swing.JList<String> ListClasses;
    private javax.swing.JPanel PanelAtributos;
    private javax.swing.JPanel PanelClasses;
    private javax.swing.JButton Relacionar;
    private javax.swing.JButton btnAddAtributo;
    private javax.swing.JButton btnAddClasse;
    private javax.swing.JButton btnGerarUML;
    private javax.swing.JButton btnListarAtributos;
    private javax.swing.JButton btnRemoveAtributo;
    private javax.swing.JButton btnRemoveClasse;
    private javax.swing.JButton btnSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPaneAtributos;
    private javax.swing.JTextArea jTextUML;
    private javax.swing.JScrollPane spListaAtributos;
    private javax.swing.JScrollPane spListaClasses;
    private javax.swing.JTextPane txtAtributosName;
    private javax.swing.JTextPane txtClassesName;
    // End of variables declaration//GEN-END:variables
}
